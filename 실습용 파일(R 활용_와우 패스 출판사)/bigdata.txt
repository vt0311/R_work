빅데이터는 뭐고 중요한 이유와 빅데이터 전문가들이 하는 일들이 무엇인지좀 이해하기 쉽게 알려주시면 감사하겠습니다.
안녕하세요~세상을바꾼퓨터천재입니다.
D.B간단히 말씀드리면 정보를 저장해놓는 공간이라고 보시면됩니다.
그러한정보를 통계관리하고 D.B프로그램을 설계 구축하는 업무를 보는겁니다.
기존에 사용하던 정보가 저장이 어려워질경우 그것을 방대한 데이터라고합니다
그러한정보를 분석하고 통계를 내는것을 빅데이터라고 합니다.
쓰이는곳은 마케팅, 영업, 전산, 회계, 통계 쪽에서 쓰이고요.
안녕하세요,^^
질문내용 잘봤구요..
답변 드리겠습니다...
요즘 빅데이터 인기가 정말 하늘을 찌르는거 같은데요.
요즘 빅데이터를 여러분들이 물어봐서~
누구보다 빅데이터를 잘알고 있습니다.^^
제가 알고있는 정보만큼 빅데이터에 관해서 정리가 잘된곳이 있는데요.
정말인지 너무 정리 잘되 있지 않나요~~?
그 어느곳보다 빅데이터에 대해서는 자부 할수 있을만큼
잘 정리 되어 있는거 같아요..
제가 직접 적어드리고 싶지만..그것보다
정리 잘 되어 있는곳을 보는게 편하실꺼 같아서요,,^^
그럼 이만 줄이며..즐거운 하루 되세요,~~^^
아직우리나라에서는 이빅데이터를 사용하는곳이 많치는 않습니다.
이제 빅데이터 시장이 형성되고 있고 미래에 꼭필요한 IT분야로 꼽히고 있습니다.
빅데이터에대한 서버구축을 하실려면 클라우드시스템이라는 환경을 구축하고
하둡이라는 분산응용처리 프로그램을 공부를 해야합니다.
관련공부를 진행하려면 C언어, 자료구조, JAVA, JSP, SQL, 클라우드, R프로그래밍
하둡 필수구요. 통계, 오라클 쪽을 공부를 더 하신다면 도움이 됩니다.
자격증 같은경우는 정보처리기사(산업기사), 자바자격증(OCJP), 오라클 자격증(OCP)
SAS자격증(SCBP), 이 있습니다.
간단히 말씀드렸는데요. 자세한건 네임카드 보시면 제가 운영하는 블로그 참고하시고
따로 카톡으로 문의주시면 자세히 상담이 가능할꺼같습니다.
빅데이터는 양, 속도, 다양성으로 정의된다.
빅데이터는 전통적인 데이터와 소셜 네트워크 등을 통해 생성되는 디지털 데이터의 집합이다. 혹자는 빅데이터를 웹로그를 포함한 웹 활동, 소셜 네트워크 상호작용 등과 같은 디지털 데이터로만 한정하는 경우를 볼 수 있다. 하지만 기존 시스템에서 생성되는 상품 거래정보나 재무정보, 콜센터 및 영업정보 등 전통적인 데이터를 배제해서는 안 된다. 기하급수적으로 늘어나는 소셜 데이터에 비하면 전통적인 데이터는 적어 보이지만 빅데이터인 것만은 사실이다.
일반적으로 기업에서 생성되는 데이터는 관계형 데이터베이스를 기초로 정형화된 데이터가 전통적으로 활용되었으나, 빅데이터에서 관심을 가지고 있는 비정형 데이터에는 전통적인 데이터베이스에 의해 조직화되거나 쉽게 해석되지 않는 정보도 포함된다. 또한 일부는 정형과 비정형이 혼합되는 형태로 나타나는데, 웹로그 데이터인데 서식이나 거래 정보 같은 정형데이터와 텍스트 및 비주얼 이미지가 조합된 데이터가 좋은 예가 된다.
세계적인 리서치 회사인 가트너는 빅데이터를 ‘양Volume', ’속도Velocity', '다양성Variety' 으로 해석한다. 때로는 ‘진실성Veracity'와 ’가치Value'와 같은 두 개의 용어를 추가하는 경우도 있다.
양(Volume)
데이터의 양을 의미한다. 데이터 중에는 크기는 상대적으로 작지만 처리하기는 훨씬 까다로운 것들이 있다. 예를 들어 일상에서 쓰는 대화체 표현들을 떠올려 보자. 평소에 주고받는 말들은 자세히 적어놓고 보면 문법과 맞지 않는 경우가 많다. 불쑥불쑥 한두 마디씩 던지는 말은 짧지만 맥락을 이해하지 못하면 도대체 무슨 의미인지 모를 때도 많다. 이런 표현들이 엄청나게 모여 있는 곳이 트위터나 페이스북과 같은 단문형 마이크로블로그(microblog)이다.
트위터 기준으로 하나하나의 글은 140자로 제한되어 있기 때문에, 사실 크기로만 보면 마이크로블로그 글은 많이 모아도 그다지 거대해 보이지 않는다. 140자가 차지하는 메모리는 고작 280바이트이고, 1억 개의 글이 모인다고 해도 스마트폰 한두 개 메모리 용량 정도인 28기가바이트밖에 안 된다. 그러나 이 수많은 글 속에서 적절한 의미를 뽑아내고 무엇이 이슈인지 분석해내는 일은 생각만큼 쉽지 않다.

  
각자 140자로 제한된 길이지만 여기에는 갖가지 속어, 함축적 표현, 비꼬는 표현 등이 난무한다. 더군다나 한국어처럼 중의적인 표현이 매우 많은 언어라면 ‘대략 난감’한 사태가 벌어지기 십상이다
반대로 양적으로는 제법 크지만 다루기 쉬운 데이터도 있다. 국내 이동통신사에서는 매일 1,000만 명이 넘는 가입자들이 수억 통이 넘는 전화를 주고받는다. 각 회사는 가입자들의 사용요금을 매기기 위해 통화 당사자, 통화시간, 문자전달 등의 이용 데이터를 저장하고 관리한다. 이런 데이터들은 미리 구조적으로 잘 짜인 상태로 저장되고 분석도 어렵지 않아 수천 테라바이트라 하더라도 빠르게 검색하고 활용할 수 있다.
따라서 빅데이터는 무조건 양적으로 많다고 해서 정의하기엔 곤란하다.
빅데이터라 불리기 위해서는 일단 데이터 집합의 크기가 커야 한다. 엄밀한 정의는 없지만, 대략적으로 적게는 수 테라바이트에서 많게는 수 페타바이트 정도 크기의 데이터 집합을 지칭하는 것이 일반적이다.
속도(Velocity)
정보를 생성하는 속도, 그리고 유입되는 데이터 흐름 속도로서 데이터를 처리하는 속도를 의미한다. 요즘의 온라인 소매업체들은 고객이 최종 구매한 상품 정보뿐만 아니라 최종 구매할 때까지 여기저기 클릭하고 웹사이트와 상호작용했던 모든 이력을 수집하고 편집할 수 있다. 이런 정보를 재빨리 활용할 줄 아는 업체는 고객에게 추가 구매 가능성이 높은 제품을 추천하여 경쟁력 우위를 확보할 수 있다. 스마트폰 시대가 막을 열면서 다시 한번 데이터 유입의 속도가 증가했고, 더불어 소비자는 위치 기반 이미지 및 오디오 데이터의 스트리밍 소스 역할을 하게 되었다.
유입되는 데이터의 속도만 문제가 되는 것이 아니다. 가령 빠르게 이동하는 데이터를 대량 저장소로 스트리밍하여 특정 시간에 배치 프로세싱을 할 수도 있다. 중요한 것은 입력에서 데이터를 가져와 결정하기까지 소요되는 피드백의 순환속도다.
빠르게 이동하는 데이터를 가리키는 일반적인 업계 용어는 ‘스트리밍 데이터’ 또는 ‘복합 이벤트 프로세싱(CEP)’이다. 스트리밍 프로세싱을 고려해야 하는 이유는 크게 두 가지로 나뉜다. 첫 번째는 입력 데이터가 온전한 형태로 저장될 수 없을 정도로 빠르게 유입되기 때문이다. 저장소의 성능을 실용적인 범위로 유지하기 위해서는 테이터가 스트리밍될 때 일정 수준의 분석이 진행되어야 한다. 두 번째 이유는 유입되는 데이터에 애플리케이션이 즉각적으로 반응해야 하기 때문이다. 모바일 애플리케이션과 온라인 게임이 확산되면서 이는 흔히 접합 수 있는 상황이 돼버렸다.
빅데이터 시대 이전에는 어떤 사건이 일어나도 그 데이터를 수집, 처리하여 사람들에게 전달하기까지 시간적 간격이 컸다. 모든 뉴스는 신문사나 방송사에 모아졌고 일정 작업을 거쳐 정해진 시간에 전달되었다. 그러나 이제 대중들은 트위터나 페이스북을 통해 ‘실시간’으로 데이터를 받을 수 있다.

  

빅데이터 시대의 기업에는 사건 발생과 데이터 수집 사이의 간격을 좁혀 더욱 역동적으로 경영 환경 변화에 대응할 기회가 커지고 있다. 이른바 기업의 민첩성이 빅데이터로 더욱 향상된 것이다. 즉 신제품을 출시하거나 프로모션을 실시할 경우, 금세 반응이 포착되고 있다.

당장 기업과 관련된 나쁜 소문이 하나 퍼지기라도 하면 삽시간에 포털사이트 검색어 상위권에 오르며 화젯거리로 떠오른다. 진위여부에 상관없이 이러한 소문에 재빨리 대응하지 못하면 하룻밤 사이에 천하의 악독한 기업으로 낙인찍히고 영업에 심각한 타격을 입는 일 다반사이다.

  

  

다양성(Variety)

데이터는 그 형태 그대로 별다른 변환 과정이 없이 프로세싱 준비가 갖춰지는 경우가 드물다. 빅데이터 시스템에서 흔히 접하는 주제는 소스 데이터가 다양하다는 것, 그리고 깔끔한 관계형 구조에 들어맞지 않는다는 것이다. 소셜 네트워크에서 쏟아져 나오는 텍스트, 센서에서 직접 생성되는 이미지 데이터 등이 모두 소스 데이터가 될 수 있다. 이들 가운데 어느 것도 애플리케이션에 곧바로 통합될 수는 없다.

  

웹에서조차 컴퓨터 간 의사소통에는 몇 가지 규칙이 있어야 하는데 데이터의 실제 모습은 너저분하기 그지없다. 브라우저마다 보내는 데이터도 제각각이고, 그렇다고 사용자가 정보를 제공해 주는 것도 아니며, 의사소통을 위해 사용하는 소프트웨어는 버전도, 제공업체도 다르다. 더구나 프로세스의 어느 부분에라도 사람이 개입하면 오류와 불일치는 피할 수 없다.

빅 데이터 프로세싱은 비구조적 데이터에서 원하는 의미를 뽑아낼 때 흔히 사용된다. 그 결과는 사람이 직접 소비할 때도 있고, 애플리케이션에 필요한 구조적 입력 데이터가 될 때도 있다.

  

빅데이터는 규모 외에 그 소스의 다양성에 놀라지 않을 수 없다. 그동안은 대부분 양과 질에 상관없이 형태가 잘 잡혀 있고 관리하기도 쉬웠다. 특정 형식에 맞춰 잘 정리된 정형화되고 구조화된 되어 있었다. 이런 데이터를 다루기 위해 이미 1970년대부터 이른바 관계형 데이터베이스(RDB : Reational Database) 기술이 발전해왔으며, 오늘날까지도 널리 쓰이고 있다.

하지만 최근 쏟아지는 데이터들은 이처럼 미리 형식을 정해놓기 어려운 것이 태반이다. 우리가 일상적으로 인터넷을 통해 만들어 내 놓는 데이터 들, 예를 들어 포탈에 올라온 뉴스물들, 블로그나 카페의 게시물, 유투브나 페이스북에 올라와 있는 동영상, 사진, 음악 등 매우 다양한 형태를 띄고 있다.

  

기업이 맞닥뜨리는 데이터 문제도 심각하다. 신용평가사에서 개개인의 신용평가를 위해 처리해야 하는 데이터는 어마어마 하다. 개인의 신상정보, 금융거래 내역, 연체 현황 등은 물론 법처리 내역, 납세 기록 등 공공기관에서 취급하는 공공데이터도 반영해야 한다. 이처럼 다양한 채널을 통해 들어오는 데이터들은 비교적 구조화가 잘된 것이라 해도 제공하는 곳마다 그 형식이 제각각이어서 이것을 통일된 양식에 맞게 정리하는 일부터 어마어마한 작업이다.

  
이처럼 데이터 하나하나 크기와 내용이 사뭇 달라 통일된 구조로 정리하기 어려운 데이터를 비정형, 또는 비구조적 데이터라고 한다. 비정형 데이터는 갈수록 그 비율이 늘어나, 앞으로 만나게 될 전체 데이터 가운데 약 90% 이상을 차지할 것으로 전망된다.

빅데이터에 미래 발전 가능성과 발전 방향이 어떻게 되나요?
궁금합니다
최근 몇년간 빅데이터가 세간의 엄청난 관심을받고  
여러기업들의 엄청난 투자지원을 받아 발전되어왔고 발전되고있습니다.
다양한분석기술들도 이에 맞추어 발전되었습니다.
제 생각을 말씀드리자면
빅데이터는 그자체로 더이상 발전할것은 없어보입니다.
이를 분석 활용하는 다른 여러분야의 발전을 기대하는것이 맞겠지요

제생각입니다 저도 다른 생각들어보고싶습니다. 
1.

아마도, SAS가 R보다 강력합니다. 특히, SAS는 알고리듬 구현을 위한 프로그래밍 기능이 매우 강력합니다. 참고로, R의 general한 기능을 표현하기 위해 R은 개발환경 이라고 부르는 데 SAS, Ms-Excel, GAUSS, MATLAB과 같은 general한 software는 모두 개발환경입니다. 개발환경이기 때문에 general한 것입니다.

 

그리고, 아마도 학생인 경우에는 학교수업만으로는 한 개의 software를 매우 잘 다루기는 많이 어렵습니다. 또한, 한 개의 software를 매우 잘 다룬다는 것이 큰 credit을 받는 것도 아닙니다.

 

따라서, SAS나 R 한 개의 software에만 치중하기 보다는 R, SAS, MATLAB, GAUSS, LIMDEP, S-PLUS, STATA, SPSS, AMOS, EVIEWS 등과 같은 유명한 software를 모두 약간씩만 익히더라도 한 개의 software에 치중하는 것 보다는 좋을 것 같네요. 
즉, 이와같은 유명한 software를 모두 다룰 줄 안다고 하는 것이 더 많은 point를 받을 수 있을 것 같네요. 제대로 익히기는 비교적 어렵지만 약간씩의 기본기능만 익히는 것은 금방 할 수 있습니다. 참고로, 여러개의 통계 software를 익히더라도 비슷하므로 헷갈리거나 하지는 않습니다.

우리나라에서는 '기술'은 단순기술로 치부하는 경향이 있다는 데 주의해야 합니다. 데이터분석도 마찬가지이고 또한, SAS나 R과 같은 software도 마찬가지입니다. 즉, 우리나라에서는 어떤 software를 잘 다루는 것과 전망과는 별 상관이 없습니다.
이는 실제로도 software를 잘 다룬다는 것이 알고리듬을 구현하거나 하는 비교적 고급기능을 사용하는 것이라기 보다는 SAS나 R등의 software가 제공하는 모듈(module) 또는 function을 잘 사용하는 것일 뿐인 경우가 많기 때문입니다. 모듈 또는 function 등의 canned software를 잘 다루는 것은 단순기술일 경우가 많기 때문입니다. 
물론, canned software도 잘 다루기 위해서는 이론에 대해서도 잘 알아야 하므로 단순기술인 것은 아닐 수도 있습니다
그나마, software를 잘 다룬다는 것을 인정받기 위해서는 아마도, SAS나 R보다는 MATLAB이나 GAUSS를 잘 한다고 하는 것이 더 많은 credit을 받을 수가 있을 것 같네요. 왜냐하면 MATLAB이나 GAUSS를 잘 다룬다는 것은 이론도 잘 알고 알고리듬도 잘 구현할 수 있다는 것을 어느정도 내포하고 있기 때문입니다
아마도, 우리나라에서는 빅데이터를 분석하는 기술이 뛰어난 것 보다는 이론을 잘 아는 것을 더 중요하게 생각합니다. 실제, software를 잘 다루는 것 뿐만아니라 이론을 잘 아는 것도 중요한데 software가 분석을 대신 해 주는 것이 아니라는 데 주의해야 합니다. software는 단순히 계산만 합니다.

